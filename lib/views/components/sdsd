// // import 'dart:typed_data';
// // import 'package:flutter/material.dart';
// // import 'package:get/state_manager.dart';
// // import 'package:ssipl_billing/controllers/Hierarchy_actions.dart';
// // import 'package:ssipl_billing/models/entities/Hierarchy_entities.dart';
// // import 'package:ssipl_billing/themes/style.dart';

// // class BranchCard extends StatefulWidget {
// //   final String name;
// //   final String email;
// //   final String id;
// //   final Uint8List imageBytes;
// //   final int index;
// //   final BranchResponse data;
// //   final HierarchyController controller;
// //   final isSelected;

// //   const BranchCard(
// //       {super.key, required this.name, required this.email, required this.id, required this.imageBytes, required this.index, required this.data, required this.controller, required this.isSelected});

// //   @override
// //   State<BranchCard> createState() => _BranchCardState();
// // }

// // class _BranchCardState extends State<BranchCard> {
// //   bool _isHovered = false;

// //   @override
// //   Widget build(BuildContext context) {
// //     return MouseRegion(
// //       onEnter: (_) => setState(() => _isHovered = true),
// //       onExit: (_) => setState(() => _isHovered = false),
// //       cursor: SystemMouseCursors.click,
// //       child: AnimatedContainer(
// //         duration: const Duration(milliseconds: 200),
// //         curve: Curves.easeOut,
// //         transform: Matrix4.translationValues(
// //           0,
// //           _isHovered ? -10 : (widget.isSelected ? -8 : 0), // Pop up on hover
// //           0,
// //         ),
// //         padding: const EdgeInsets.all(2),
// //         decoration: BoxDecoration(
// //           gradient: LinearGradient(
// //             colors: [
// //               widget.isSelected ? Colors.redAccent : Primary_colors.Color3,
// //               const Color.fromARGB(255, 189, 189, 189),
// //               Primary_colors.Color7,
// //             ],
// //             begin: Alignment.topCenter,
// //             end: Alignment.bottomCenter,
// //           ),
// //           borderRadius: BorderRadius.circular(12),
// //           border: Border.all(
// //             color: widget.isSelected ? Colors.redAccent : Colors.transparent,
// //             width: widget.isSelected ? 2 : 1,
// //           ),
// //           boxShadow: widget.isSelected
// //               ? [
// //                   BoxShadow(
// //                     color: Colors.redAccent.withOpacity(0.5),
// //                     spreadRadius: 3,
// //                     blurRadius: 6,
// //                     offset: const Offset(0, 4),
// //                   ),
// //                 ]
// //               : _isHovered
// //                   ? [
// //                       BoxShadow(
// //                         color: Primary_colors.Color3.withOpacity(0.5),
// //                         spreadRadius: 3,
// //                         blurRadius: 6,
// //                         offset: const Offset(0, 4),
// //                       ),
// //                     ]
// //                   : [
// //                       BoxShadow(
// //                         color: Colors.black.withOpacity(0.2),
// //                         spreadRadius: 2,
// //                         blurRadius: 4,
// //                         offset: const Offset(2, 2),
// //                       ),
// //                     ],
// //         ),
// //         child: GestureDetector(
// //           onTap: () {
// //             WidgetsBinding.instance.addPostFrameCallback((_) {
// //               widget.controller.onBranchSelected(widget.data, widget.index);
// //             });
// //           },
// //           child: Card(
// //             color: Colors.transparent,
// //             shadowColor: Colors.transparent,
// //             shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
// //             elevation: 0,
// //             child: Column(
// //               crossAxisAlignment: CrossAxisAlignment.start,
// //               children: [
// //                 Expanded(
// //                   child: Stack(
// //                     children: [
// //                       Container(
// //                         decoration: BoxDecoration(
// //                           borderRadius: BorderRadius.circular(12),
// //                           boxShadow: [
// //                             BoxShadow(
// //                               color: Colors.black.withOpacity(0.2),
// //                               spreadRadius: 2,
// //                               blurRadius: 4,
// //                               offset: const Offset(2, 2),
// //                             ),
// //                           ],
// //                         ),
// //                         child: ClipRRect(
// //                           borderRadius: const BorderRadius.vertical(top: Radius.circular(12)),
// //                           child: Container(
// //                             height: 150,
// //                             width: double.infinity,
// //                             color: Colors.white,
// //                             child: widget.imageBytes.isNotEmpty ? Image.memory(widget.imageBytes, fit: BoxFit.contain) : const Center(child: Text("No Image Available")),
// //                           ),
// //                         ),
// //                       ),
// //                       Positioned(
// //                         top: 0,
// //                         left: 0,
// //                         child: Tooltip(
// //                           message: "Edit",
// //                           child: CircleAvatar(
// //                             radius: 18,
// //                             backgroundColor: Colors.white.withOpacity(0.0),
// //                             child: IconButton(
// //                               icon: const Icon(Icons.edit_square, size: 15, color: Color.fromARGB(255, 110, 110, 110)),
// //                               onPressed: () {},
// //                             ),
// //                           ),
// //                         ),
// //                       ),
// //                     ],
// //                   ),
// //                 ),
// //                 Expanded(
// //                   child: Align(
// //                     alignment: Alignment.center,
// //                     child: Padding(
// //                       padding: const EdgeInsets.all(8.0),
// //                       child: Column(
// //                         mainAxisAlignment: MainAxisAlignment.center,
// //                         crossAxisAlignment: CrossAxisAlignment.center,
// //                         children: [
// //                           Text(
// //                             widget.name,
// //                             style: const TextStyle(
// //                               fontSize: 12,
// //                               fontWeight: FontWeight.bold,
// //                             ),
// //                             maxLines: 3,
// //                             overflow: TextOverflow.ellipsis,
// //                           ),
// //                           const SizedBox(height: 4),
// //                           const Text(
// //                             "ANAMALLAIS AGENCIES STADIUM PVT LTD, 7B, Mettupalayam road,Kavundanpalayam Coimbatore- 641030",
// //                             style: TextStyle(fontSize: 8),
// //                             textAlign: TextAlign.center,
// //                           ),
// //                           const SizedBox(height: 4),
// //                         ],
// //                       ),
// //                     ),
// //                   ),
// //                 ),
// //               ],
// //             ),
// //           ),
// //         ),
// //       ),
// //     );
// //   }
// // }




















// // ignore_for_file: must_be_immutable

// import 'dart:convert';
// import 'dart:io';
// import 'dart:typed_data';
// import 'package:file_picker/file_picker.dart';
// import 'package:flutter/material.dart';
// import 'package:get/get.dart';
// import 'package:http/http.dart' as http;
// import 'package:ssipl_billing/controllers/Hierarchy_actions.dart';
// import 'package:ssipl_billing/models/entities/Hierarchy_entities.dart';
// import 'package:ssipl_billing/services/Hierarchy_services/hierarchy_service.dart';
// import 'package:ssipl_billing/views/components/Indcard.dart';
// import 'package:ssipl_billing/views/components/Loading.dart';

// class BranchGrid extends StatefulWidget with HierarchyService {
//   BranchGrid({super.key});

//   @override
//   _BranchGridState createState() => _BranchGridState();
// }

// class _BranchGridState extends State<BranchGrid> with SingleTickerProviderStateMixin {
//   final HierarchyController hierarchyController = Get.find<HierarchyController>();
//   // late AnimationController _controller;
//   // late Animation<Offset> _slideAnimation;
//   // var OrgID = "0".obs;
//   final loader = LoadingOverlay();

//   @override
//   void initState() {
//     super.initState();
//     hierarchyController.hierarchyModel.controller = AnimationController(
//       vsync: this,
//       duration: const Duration(milliseconds: 600),
//     );

//     hierarchyController.hierarchyModel.slideAnimation = Tween<Offset>(
//       begin: const Offset(0, 1.5),
//       end: Offset.zero,
//     ).animate(CurvedAnimation(
//       parent: hierarchyController.hierarchyModel.controller,
//       curve: Curves.easeInCubic,
//     ));
//     Future.delayed(const Duration(milliseconds: 300), () {
//       if (mounted) hierarchyController.hierarchyModel.controller.forward();
//     });
//     // WidgetsBinding.instance.addPostFrameCallback((_) {
//     //   widget.get_OrganizationList(context);
//     //   widget.get_BranchList(context);
//     // });
//   }

//   @override
//   void didChangeDependencies() {
//     super.didChangeDependencies();
//     WidgetsBinding.instance.addPostFrameCallback((_) {
//       widget.get_OrganizationList(context);
//       widget.get_BranchList(context);
//     });
//   }

//   // @override
//   // void dispose() {
//   //   _controller.dispose();
//   //   super.dispose();
//   // }

//   // Future<void> fetchIndividualList() async {
//   //   try {
//   //     loader.start(context);
//   //     await Future.delayed(const Duration(milliseconds: 1000));
//   //     BranchGrid.branches.clear();
//   //     final headers = {'Content-Type': 'application/json'};
//   //     final requestBody = {"sitetype": 0, "filter": 'ALL', "organizationid": OrgID.value, "companyid": "0"};

//   //     final response = await http.post(
//   //       Uri.parse("http://192.168.0.200:8080/admin/sitelist"),
//   //       headers: headers,
//   //       body: json.encode(requestBody),
//   //     );

//   //     if (response.statusCode == 200) {
//   //       final decodedResponse = json.decode(response.body);
//   //       if (decodedResponse['code'] == true) {
//   //         List<dynamic> branches = decodedResponse['sql'];
//   //         Set<String> individualIdSet = {};

//   //         for (int i = 0; i < branches.length; i++) {
//   //           String individualId = branches[i]['Branch_id'].toString();
//   //           if (!individualIdSet.contains(individualId)) {
//   //             individualIdSet.add(individualId);

//   //             Uint8List? fileBytes;
//   //             if (branches[i]['Branch_Logo'] != null && branches[i]['Branch_Logo']['data'] != null) {
//   //               try {
//   //                 List<int> logoBytes = List<int>.from(branches[i]['Branch_Logo']['data']);
//   //                 fileBytes = Uint8List.fromList(logoBytes);
//   //               } catch (e) {
//   //                 print("Error parsing logo bytes: $e");
//   //               }
//   //             }

//   //             BranchGrid.branches.add(BranchData.fromJson(branches[i]));
//   //           }
//   //         }
//   //       }
//   //     }
//   //     loader.stop();
//   //   } catch (e) {
//   //     print(e);
//   //   }
//   // }

//   // Future<void> fetchOrganizationList() async {
//   //   try {
//   //     loader.start(context);
//   //     await Future.delayed(const Duration(milliseconds: 1000));
//   //     BranchGrid.organizations.clear();
//   //     final response = await http.post(
//   //       Uri.parse("http://192.168.0.200:8080/admin/organization"),
//   //       headers: {'Content-Type': 'application/json'},
//   //       body: json.encode({"sitetype": 0}),
//   //     );

//   //     if (response.statusCode == 200) {
//   //       final decodedResponse = json.decode(response.body);
//   //       if (decodedResponse['code'] == true) {
//   //         Set<String> organizationIdSet = {};
//   //         for (int i = 0; i < decodedResponse['data'].length; i++) {
//   //           String organizationId = decodedResponse['data'][i]['Organization_id'].toString();
//   //           if (!organizationIdSet.contains(organizationId)) {
//   //             organizationIdSet.add(organizationId);

//   //             Uint8List? fileBytes;
//   //             if (decodedResponse['data'][i]['Organization_Logo'] != null && decodedResponse['data'][i]['Organization_Logo']['data'] != null) {
//   //               try {
//   //                 fileBytes = Uint8List.fromList(List<int>.from(decodedResponse['data'][i]['Organization_Logo']['data']));
//   //               } catch (e) {
//   //                 print("Error parsing logo bytes: $e");
//   //               }
//   //             }
//   //             BranchGrid.organizations.add(OrganizationData.fromJson(decodedResponse['data'][i]));
//   //           }
//   //         }
//   //       }
//   //     }
//   //     loader.stop();
//   //   } catch (e) {
//   //     print("Error fetching organization list: $e");
//   //   }
//   // }

//   Future<bool> pickFile(BuildContext context, int id) async {
//     FilePickerResult? result = await FilePicker.platform.pickFiles(type: FileType.custom, allowedExtensions: ['png', 'jpg', 'jpeg']);
//     if (result != null) {
//       final file = File(result.files.single.path!);
//       final fileLength = await file.length();
//       if (fileLength > 2 * 1024 * 1024) {
//         showDialog(
//           context: context,
//           builder: (context) => AlertDialog(
//             content: const Text('Selected file exceeds 2MB in size.'),
//             actions: [ElevatedButton(onPressed: () => Navigator.of(context).pop(), child: const Text('OK'))],
//           ),
//         );
//         return false;
//       } else {
//         uploadImage(file, 'organization', id);
//         return true;
//       }
//     }
//     return false;
//   }

//   Future<void> uploadImage(File file, String logoType, int id) async {
//     try {
//       final response = await http.post(
//         Uri.parse("http://192.168.0.200:8081/admin/uploadlogo"),
//         headers: {'Content-Type': 'application/json'},
//         body: json.encode({
//           "logotype": logoType,
//           "id": id,
//           "image": await file.readAsBytes(),
//         }),
//       );
//       if (response.statusCode == 200 && json.decode(response.body)['code'] == true) {
//         widget.get_BranchList(context);
//       }
//     } catch (e) {
//       print("Error uploading image: $e");
//     }
//   }

//   @override
//   Widget build(BuildContext context) {
//     return Column(
//       children: [
//         Obx(() {
//           return Expanded(
//             child: SlideTransition(
//               position: hierarchyController.hierarchyModel.slideAnimation,
//               child: GridView.builder(
//                 padding: const EdgeInsets.all(8.0),
//                 gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
//                   crossAxisCount: 4,
//                   crossAxisSpacing: 30,
//                   mainAxisSpacing: 30,
//                 ),
//                 itemCount: hierarchyController.hierarchyModel.BranchList.value.Live.length,
//                 itemBuilder: (context, index) {
//                   var Branch = hierarchyController.hierarchyModel.BranchList.value.Live[index];
//                   return GestureDetector(
//                     onTap: () {
//                       pickFile(context, Branch.branchId);
//                     },
//                     child: BranchCard(
//                       name: Branch.branchName,
//                       id: Branch.branchId.toString(),
//                       email: Branch.emailId,
//                       imageBytes: Branch.branchLogo!,
//                       index: index,
//                       data: hierarchyController.hierarchyModel.BranchList.value,
//                       controller: hierarchyController,
//                       isSelected: hierarchyController.hierarchyModel.BranchList.value.Live[index].isSelected,
//                     ),
//                   );
//                 },
//               ),
//             ),
//           );
//         }),
//       ],
//     );
//   }
// }
